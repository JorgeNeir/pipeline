name: Reusable Deploy to Azure Container App

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      container_app_name:
        required: true
        type: string
      resource_group_name:
        required: true
        type: string
      acr_name:
        required: true
        type: string
      dockerfile_path:
        required: false
        type: string
        default: './Dockerfile'
      image_tag:
        required: false
        type: string
        default: ''
      environment_yaml_path:
        required: false
        type: string
        default: '' # Vacío por defecto, el paso de actualización se omitirá si no se proporciona
    secrets:
      AZURE_CREDENTIALS:
        required: true
      ACR_USERNAME:
        required: true
      ACR_PASSWORD:
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.acr_name }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Determine Image Tag
        id: image_tag_generator
        run: |
          if [ -z "${{ inputs.image_tag }}" ]; then
            echo "tag=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ inputs.image_tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfile_path }}
          push: true
          tags: ${{ inputs.acr_name }}.azurecr.io/${{ inputs.image_name }}:${{ steps.image_tag_generator.outputs.tag }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Log in to Azure
        id: azure_login # Damos un id para referenciarlo si es necesario
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container App (Image Update)
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ inputs.acr_name }}.azurecr.io/${{ inputs.image_name }}:${{ steps.image_tag_generator.outputs.tag }}
          containerAppName: ${{ inputs.container_app_name }}
          resourceGroup: ${{ inputs.resource_group_name }}

      # Nuevo paso para aplicar la configuración del entorno desde YAML
      - name: Apply Environment Configuration from YAML
        if: inputs.environment_yaml_path != '' # Solo se ejecuta si se proporciona un path para el YAML
        uses: azure/cli@v1
        with:
          inlineScript: |
            echo "Applying environment configuration from ${{ inputs.environment_yaml_path }}..."
            az containerapp update \
              --name ${{ inputs.container_app_name }} \
              --resource-group ${{ inputs.resource_group_name }} \
              --yaml ${{ inputs.environment_yaml_path }}
            echo "Environment configuration applied."
